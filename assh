#!/bin/sh
#
OUTPUT=$(cloudselect x)

CLOUD=$(echo $OUTPUT | jq -r '.instances[] | @base64')
PROFILE="-"
REGION="-"
TMUX_LAYOUT="tiled"
TMUX_SESSION_NAME="assh-"$(date +%s)
WAIT_FOR_INPUT='read -n 1 -s -r -p "Press any key to continue"'
WINDOW=0

OPTION_AFTER=$(echo $OUTPUT | jq -r '.option.after // ""')
OPTION_BEFORE=$(echo $OUTPUT | jq -r '.option.before // ""')
OPTION_SSH=$(echo $OUTPUT | jq -r '.option.ssh // ""')
OPTION_SSH_COMMAND=$(echo $OUTPUT | jq -r '.option.ssh_command // ""')

# Collect shared arguments
for row in $(echo $CLOUD); do
  OUTPUT=$(echo ${row} | base64 --decode)
  PROFILE=$(echo $OUTPUT | jq -r '.metadata.profile')
  REGION=$(echo $OUTPUT | jq -r '.metadata.region')
  break
done

echo "assh to $PROFILE $REGION"
test "$OPTION_BEFORE" != "null" && eval "$OPTION_BEFORE"
# Iterate over instances
for row in $(echo $CLOUD); do
  OUTPUT=$(echo ${row} | base64 --decode)
  HOST=$(echo $OUTPUT | jq -r '.host')
  KEY="-i"$(echo $OUTPUT | jq -r '.key // ""')
  USER=$(echo $OUTPUT | jq -r '.user // ""')"@"

  connectString="ssh -o UserKnownHostsFile=/dev/null $OPTION_SSH $KEY $USER$HOST $OPTION_SSH_COMMAND"
  commandString="${connectString}; $WAIT_FOR_INPUT"

  tmux list-windows | grep -q "${TMUX_SESSION_NAME}"
  if [ $WINDOW -eq 0 -a $? -ne 0 ]; then
    tmux new-window -n "${TMUX_SESSION_NAME}" "$commandString"
    echo "$connectString"
  else
    tmux split-window -t "${TMUX_SESSION_NAME}" "${commandString}" && \
    echo "$connectString"
  fi
  WINDOW=$((WINDOW+1))
done

test $WINDOW -gt 0 && tmux select-layout -t "${TMUX_SESSION_NAME}" "${TMUX_LAYOUT}"
tmux set-window-option -t "${TMUX_SESSION_NAME}" synchronize-panes on
test "$OPTION_AFTER" != "null" && eval "$OPTION_AFTER"
